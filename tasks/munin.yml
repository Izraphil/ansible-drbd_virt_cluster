#!/usr/bin/env ansible-playbook
---
- name: Required Cluster Packages
  hosts: drbd-cluster
  any_errors_fatal: true
  tasks:

  - name: Installing Munin Packages
    apt: 'name={{item}} state=present update_cache=yes'
    with_items:
      - "automake"
      - "autoconf"
      - "gcc"
      - "apache2-utils"
      - "nginx"
      - "spawn-fcgi"
      - "fcgiwrap"
      - "snmpd"
      - "snmp-mibs-downloader"
      - "sysstat"
      - "mrtg"
      - "libxml-simple-perl"
      - "libxml-twig-perl"
      - "munin-node"
      - "munin"
      - "munin-async"
      - "munin-plugins"
      - "munin-libvirt-plugins"
      - "munin-plugins-c"
      - "munin-plugins-core"
      - "munin-plugins-extra"
      - "munin-plugins-java"

  - name: Replacing /etc/snmpd.conf with one from template
    template:
      src: ../templates/snmpd/snmpd.conf.j2
      dest: /etc/snmp/snmpd.conf
      owner: root
      group: root
      mode: "u=rw,g=r,o=r"

  - name: Replacing /etc/default/snmpd with one from template
    template:
      src: ../templates/snmpd/default_snmpd.j2
      dest: /etc/default/snmpd
      owner: root
      group: root
      mode: "u=rw,g=r,o=r"

  - name: Replacing /lib/systemd/system/snmpd.service with one from template
    template:
      src: ../templates/snmpd/snmpd.service.j2
      dest: /lib/systemd/system/snmpd.service
      owner: root
      group: root
      mode: "u=rw,g=r,o=r"

  - name: snmpd service restart
    service:
      name: snmpd
      state: restarted

  - name: Replacing munin.conf with one from template
    template:
      src: ../templates/munin/munin.conf.j2
      dest: /etc/munin/munin.conf
      owner: root
      group: root
      mode: "u=rw,g=r,o=r"

  - name: Replacing munin-node.conf with one from template
    template:
      src: ../templates/munin/munin-node.conf.j2
      dest: /etc/munin/munin-node.conf
      owner: root
      group: root
      mode: "u=rw,g=r,o=r"

  - name: Replacing /etc/munin/plugin-conf.d/libvirt with one from template
    template:
      src: ../templates/munin/plugin-conf.d/libvirt.j2
      dest: /etc/munin/plugin-conf.d/libvirt
      owner: root
      group: root
      mode: "u=rw,g=r,o=r"

  - name: Replacing /etc/munin/plugin-conf.d/docker with one from template
    template:
      src: ../templates/munin/plugin-conf.d/docker.j2
      dest: /etc/munin/plugin-conf.d/docker
      owner: root
      group: root
      mode: "u=rw,g=r,o=r"

  - name: Replacing /etc/munin/plugin-conf.d/munin-node with one from template
    template:
      src: ../templates/munin/plugin-conf.d/munin-node.j2
      dest: /etc/munin/plugin-conf.d/munin-node
      owner: root
      group: root
      mode: "u=rw,g=r,o=r"

  - name: munin-node service restart
    service:
      name: munin-node
      enabled: true
      state: running

  - name: Replacing /etc/nginx/sites-available/default with one from template
    template:
      src: ../templates/nginx/nginx.default.j2
      dest: /etc/nginx/sites-available/default
      owner: root
      group: root
      mode: "u=rw,g=r,o=r"

#  - name: Replacing /etc/nginx/modules-enabled/default.conf with one from template
#    template:
#      src: ../templates/nginx/modules-enabled/default.conf.j2
#      dest: /etc/nginx/modules-enabled/default.conf
#      owner: root
#      group: root
#      mode: "u=rw,g=r,o=r"

  - name: Replacing /etc/nginx/conf.d/default with one from template
    template:
      src: ../templates/nginx/conf.d/default.conf.j2
      dest: /etc/nginx/conf.d/default.conf
      owner: root
      group: root
      mode: "u=rw,g=r,o=r"

#  - name: Replacing /etc/init.d/munin-fastcgi with one from template
#    template:
#      src: ../templates/nginx/munin-fastcgi.j2
#      dest: /etc/init.d/munin-fastcgi
#      owner: root
#      group: root
#      mode: "0775"

  - name: Create symbolic link /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default
    file:
      src: /etc/nginx/sites-available/default
      dest: /etc/nginx/sites-enabled/default
      state: link

  - name: nginx service disable and stop because we are controlling this in the cluster stack with a virtual ip
    service:
      name: nginx
      enabled: false
      state: stopped

  - name: Installing Munin 3rd Party Pluggins (https://github.com/munin-monitoring/contrib) from Github
    git:
      repo: https://github.com/munin-monitoring/contrib
      dest: /usr/share/munin/plugins-contrib
      clone: yes
      update: yes
  - name: Installing Nagios_Check_DRBD9 from https://github.com/alaskacommunications/nagios_check_drbd9
    git:
      repo: https://github.com/alaskacommunications/nagios_check_drbd9
      dest: /opt/nagios_check_drbd
      clone: yes
      update: yes

  - name: Adding docker_cpu/docker_memory from Munin Plugins-Contrib to /usr/share/munin/plugins
    file:
      src: /usr/share/munin/plugins-contrib/plugins/docker/{{ item }}
      dest: /usr/share/munin/plugins/{{ item }}
      state: hard
    with_items:
      - docker_cpu
      - docker_memory

  - name: Adding DRBD/DRBD-STAT from Munin Plugins-Contrib to /usr/share/munin/plugins
    file:
      src: /usr/share/munin/plugins-contrib/plugins/drbd/{{ item }}
      dest: /usr/share/munin/plugins/{{ item }}
      state: hard
    with_items:
      - drbd
      - drbd-stat

  - name: Adding dell_fans from Munin Plugins-Contrib to /usr/share/munin/plugins
    file:
      src: /usr/share/munin/plugins-contrib/plugins/fan/dell_fans
      dest: /usr/share/munin/plugins/dell_fans
      state: hard

  - name: Adding KVM/Libvirt Monitors from Munin Plugins-Contrib to /usr/share/munin/plugins
    file:
      src: /usr/share/munin/plugins-contrib/plugins/libvirt/{{ item }}
      dest: /usr/share/munin/plugins/{{ item }}
      state: hard
    with_items:
      - kvm_cpu
      - kvm_io
      - kvm_mem
      - kvm_net
      - munin-libvirtpy

  - name: Create symbolic links for munin plugins from /usr/share/munin/plugins to /etc/munin/plugins/plugins
    file:
      src: /usr/share/munin/plugins/{{ item }}
      dest: /etc/munin/plugins/{{ item }}
      state: link
    with_items:
      - docker_cpu
      - docker_memory
      - drbd
      - drbd-stat
      - dell_fans
      - kvm_cpu
      - kvm_io
      - kvm_mem
      - kvm_net
      - munin-libvirtpy

  - name: Set Munin /etc/munin/plugin-conf.d File Permissions
    file:
      path: /etc/munin/plugin-conf.d
      state: directory
      mode: 0755
      owner: munin
      group: munin
      recurse: yes

  - name: Set Munin /var/lib/munin File Permissions
    file:
      path: /var/lib/munin
      state: directory
      mode: 0755
      owner: munin
      group: munin
      recurse: yes

  - name: Set Munin /var/log/munin File Permissions
    file:
      path: /var/log/munin
      state: directory
      mode: 0755
      owner: munin
      group: munin
      recurse: yes

  - name: Set Munin /var/lib/munin/cgi-tmp File Permissions
    file:
      path: /var/lib/munin/cgi-tmp
      state: directory
      mode: 0644
      owner: munin
      group: www-data
      recurse: yes

  - name: Set Munin /var/lib/munin-node/plugin-state File Permissions
    file:
      path: /var/lib/munin-node/plugin-state
      state: directory
      mode: 0775
      owner: nobody
      group: nogroup
      recurse: yes

  - name: Ensure Munin directory /var/cache/munin/www
    file:
      path: /var/cache/munin/www
      state: directory
      mode: 0775
      owner: munin
      group: www-data
      recurse: yes


#  - name: Ensure Munin directory /var/cache/munin/www/virtual
#    file:
#      path: /var/cache/munin/www/virtual
#      state: directory
#      mode: 0775
#      owner: munin
#      group: www-data
#      recurse: yes

#  - name: add munin plugins
#    script: ../files/munin/munin_plugins.sh

#  - name: Adding munin user to the the docker group
#    command: 'usermod -a -G docker munin'

#  - name: munin-node service restart
#    service:
#      name: munin-node
#      enabled: true
#      state: running


  - name: Running munin-node-configure to activate munin plugins
    script: ../files/munin_config_plugins.sh

#  - name: Systemd daemon reload
#    systemd:
#      daemon_reload: yes

#  - name: Munin Systemd configuration and daemon reload
#    systemd:
#      name: munin-node
#      enabled: true
#      state: started

#  - name: Configure Munin Files
#    file: 'name={{item}} mode=0644 '
#    with_items:
#      - "/var/lib/munin/datafile"
#      - "/var/lib/munin/limits"
#      - "/var/lib/munin/munin-graph.stats"
#      - "/var/lib/munin/munin-update.stats"

#  - name: Munin Node service restart
#    service:
#      name: munin-node
#      state: restarted
