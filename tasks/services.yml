#!/usr/bin/env ansible-playbook
---
- name: Default Service state. 
  hosts: drbd-cluster

  tasks:

    - name: Check if Services for the H/A Storage Infrastructure Cluster Resources have been deployed and enabled already
      command: systemctl is-enabled --quiet "{{ item }}"
      register: hasi_services_enabled
      ignore_errors: true
      with_items:
#            - lvm2-clvmd
            - dlm
            - drbd
            - haveged
            - heartbeat
            - ocfs2
            - o2cb

    - debug:
         var: hasi_services_enabled

    - name: Check if HASI services are running
      command: systemctl is-active --quiet "{{ item.item }}"
      with_items: "{{ hasi_services_enabled.results }}"
      when: item.rc == 0

    - name: Check if Services for the Cluster Communications have been deployed and enabled already
      command: systemctl is-enabled --quiet "{{ item }}"
      register: cluster_services_enabled
      ignore_errors: true
      with_items:
            - corosync
            - pacemaker
            - pcsd
    - debug:
         var: cluster_services_enabled

    - name: Check that Cluster services are running
      command: systemctl is-active --quiet "{{ item.item }}"
      with_items: "{{ cluster_services_enabled.results }}"
      when: item.rc == 0

    - name: Stop and Disable Services for the H/A Storage Infrastructure Cluster Resources so they may be enabled by Corosync/Pacemaker/PCSD
      service: name={{ item.item }} state=stopped enabled=false
      with_items: "{{ hasi_services_enabled.results }}"
      when: item.rc == 0

    - name: Start and Enable Corosync/Pacemaker/PCSD services at startup
      service: name={{ item.item }} state=running enabled=true
      with_items: "{{ cluster_services_enabled.results }}"
      when: item.rc == 1
